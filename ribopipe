#!/bin/bash +x

# --------------------------------- USAGE -----------------------------------

# ./ribopipe.sh <directory> <database> <shannon-reads>

# - Directory contains reads
# - Database is a TaxCollector database in FASTA format
# - Shannon-reads is the number of reads to use to calculate the
#     Shannon Diversity Index

# ------------------------------ CONFIGURATION ------------------------------

# So you can manually specify which python/perl you want to use.
python=$(which python)
perl=$(which perl)

assemble="./src/clc/clc_ref_assemble_long"
filter="./src/clc/filter_matches"
make_tables="./src/clc/assembly_table"
count_phyl="$python src/phylo_count.py"
megaclustable="$perl src/megaclustable.pl"
pre_shannon="$python src/preshannon.py"
shannon="$perl src/shannon.pl"
unassembled_reads="src/clc/unassembled_reads"
set -e # script dies if anything exits in error.

# ---------------------------------------------------------------------------

dir=$1 # working directory
reads=$1/reads # where the reads are at
clc_out=$1/clc_out # where CLC's output goes
tables=$1/tables # where the tables go
database=$2 # the RDP database
shannon_reads=$3 # number of reads for Shannon-Diversity Index
unassembled=$1/reads/unassembled # Where unassembled reads are kept

# ---------------------------------------------------------------------------
bar="----------------------------------------------------------------------"

main () {
  title "Started: $(date)"
  echo "$bar"
  echo "DIR = $dir"
  echo "READS = $reads"
  echo "CLC_OUT = $clc_out"
  echo "TABLES = $tables"
  echo "DATABASE = $database"
  echo "SHANNON_READS = $shannon_reads"
  
  mkdir -p $clc_out
  mkdir -p $tables
  mkdir -p $unassembled
  
  reference_assemble
  
  filter
  
  generate_tables
  
  count_phylogenies $tables  
  
  make_megaclustables $tables $dir
  
#  run_shannon
  
  title "Finished: $(date)."
}

reference_assemble () { 
  title "Assembling $reads against $database"

  for file in $reads/*.txt
  do
  
  $assemble -o "$clc_out/$(basename $file).out" \
    -r random \
    -a global \
    -q -p fb ss 0 500 "$file" \
    -d $database \
    -l 0.5 \
    -s 0.8
  done
}

filter () {
  title "Filtering with $filter"
  for sim in 80 90 95 99
  do
    for file in $clc_out/*.out
    do     
      mkdir -p $clc_out/L_98_S_$sim
      
      $filter -a $file \
         -l 0.98 \
         -s .$sim \
         -o $clc_out/L_98_S_$sim/$(basename $file).filtered 
    done
  done
}

generate_tables() {
  title "Generating tables with $make_tables"
  for sim in 80 90 95 99
  do
    for file in $clc_out/L_98_S_$sim/*.filtered
    do
      # Generate tables for each percent similarity
      mkdir -p $tables/L_98_S_$sim
      $make_tables -n -p -s $file > $tables/L_98_S_$sim/$(basename $file).table
      
      # Output unassembled reads for each percent similarity
      mkdir -p $unassembled/L_98_S_$sim
      $unassembled_reads \
         -a assembly $file \
         -o output $unassembled/L_98_S_$sim/$output/$(basename file).fa
    done
  done
}

count_phylogenies () {
  title "Summing up phylogenies with $count_phyl"
  table_dir=$1
  
  for sim in 80 90 95 99
  do
    for file in $table_dir/L_98_S_$sim/*.table
    do
       $count_phyl $database $file
       cat $file.paired.out $file.unpaired.out > $file.both.out
     done
  done
}

make_megaclustables () {
  title "Megaclustableing with $megaclustable"
  table_dir=$1
  out_dir=$2
  
  $megaclustable -m $(ls -m $table_dir/L_98_S_99/*.both.* | tr -d ',\n') -t 6 -o $out_dir/species.txt
  $megaclustable -m $(ls -m $table_dir/L_98_S_95/*.both.* | tr -d ',\n') -t 5 -o $out_dir/genus.txt
  $megaclustable -m $(ls -m $table_dir/L_98_S_90/*.both.* | tr -d ',\n') -t 4 -o $out_dir/family.txt
  $megaclustable -m $(ls -m $table_dir/L_98_S_90/*.both.* | tr -d ',\n') -t 3 -o $out_dir/order.txt
  $megaclustable -m $(ls -m $table_dir/L_98_S_90/*.both.* | tr -d ',\n') -t 2 -o $out_dir/class.txt
  $megaclustable -m $(ls -m $table_dir/L_98_S_80/*.both.* | tr -d ',\n') -t 1 -o $out_dir/phylum.txt
  $megaclustable -m $(ls -m $table_dir/L_98_S_80/*.both.* | tr -d ',\n') -t 0 -o $out_dir/domain.txt
}

run_shannon () {
  title "Shannon Diversity Indexing"

  mkdir -p $tables/shannon/
  for sim in 80 90 95 99
  do
    mkdir -p $tables/shannon/L_98_S_$sim
    # Make files
    for file in $tables/L_98_S_$sim/*.table
    do
      $pre_shannon $shannon_reads $file $tables/shannon/L_98_S_$sim/$(basename $file)
    done    
  done
  
  # Run Phylocount
  count_phylogenies "$tables/shannon"    
  
  # Run Megaclustable
  make_megaclustables "$tables/shannon" "$tables/shannon/"
  
  # Run shannon.pl on our standardized tables
  for filename in $tables/shannon/*.txt
  do
    $shannon -t $filename >> $filename
  done
}

title () {
  purple="\033[0;35m"
  nocolor="\033[0m"
  echo "$bar"
  echo -e $purple"$1"$nocolor
}

main
